package 数组;

//给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。
//你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。
//
//示例：
//给定 nums = [2, 7, 11, 15], target = 9
//因为 nums[0] + nums[1] = 2 + 7 = 9
//所以返回 [0, 1]
public class 两数之和_暴力法 {
	public int[] twoSum(int[] nums, int target) {
		for(int i=0;i<nums.length;i++) {
			for(int j=i+1;j<nums.length;j++) {
				if(nums[i]+nums[j]==target) {
					return new int[] {i,j};
				}
			}
		}
	throw new IllegalArgumentException("No two sum solution");
}

private static void printArr(int[] nums){
    for(int num: nums)
        System.out.print(num + " "); //逐个输出数组元素
    System.out.println();  //println("test")相当于print("test\n")就是一般的输出字符串, println 将它的参数显示在命令窗口，并在结尾加上换行符，将输出光标定位在下一行的开始。
}

public static void main(String[] args) {
    int[] nums = {0, 4, 3, 0};
    int target = 3;
    printArr((new 两数之和_暴力法()).twoSum(nums, target));
}
}